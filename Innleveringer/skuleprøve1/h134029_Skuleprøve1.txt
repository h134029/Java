// Oppgave 1

public static void ma() {

	int x = 2;
	int y = 4;

	double d = 2.0;
	char c = 'd';
	boolean b = false;

	System.out.println(d);
	System.out.println("x : " + x);
	System.out.println(x + x * y);
	System.out.println(x == 7 || b);
	System.out.println(!(x >= 7) && c == 'e');
	System.out.println(x * y * (-x));
	System.out.println(2 / 4);
}
// Printes ut:
// 2.0
// x : 2
// 10
// false
// false
// -16
// 0

// Oppgave 2

public static void main(String[] args) {
	
	for (int i = 2; i < 7; i++) {
		int j = 10/i;
		System.out.println("10 / " + i + " = " + j);
		j++;
	}
}

// Oppgave 3

public static int b(int x, int y) {

	while (x != y) {
		System.out.println("x = " + x + ", y = " + y);
		if (x > y) {
			x = x - y;
		} else {
			y = y - x;
		}
	}
	return x;

public static void main(String[] args) {
	int a = b(28, 12);
	System.out.println(a);
}
// Printes ut:
// x = 28, y = 12
// x = 16, y = 12
// x = 4, y = 12
// x = 4, y = 8
// 4

// Oppgave 4
// a)

public static int antallSann(boolean[] tab) {
	int antallSann = 0;
	for (int i = 0; i < tab.length; i++) {
		antallSann += (tab[i]) ? 1 : 0;
	}
	return antallSann;
}
// b)

public static int sisteSann(boolean[] tab) {
	
	int i = tab.length - 1;
	int k = -1;
	
	while (k < 0 && i >= 0) {
		k = (tab[i]) ? i : -1;
		i--;
	}
	return k;
}
// Oppgave 5

public static void main(String[] args) {
	      // kolonne  0  1  2
	int[][] mat = 	{{1, 2, 3},  // rekke 0
			 {4,-5, 6},  // rekke 1
			{-7, 8, 0}}; // rekke 2
}
// a)

public static boolean erPositiv(int[][] mat, int r, int k) {

        boolean positivtTall = (mat[r][k] > 0);

        return positivtTall;
}
// b)

public static boolean erPositivRekke(int[][] mat, int r) {
	
	int checksum = 0;
	int i = 0;
	while (i < mat[r].length) {
		checksum += (mat[r][i++] > 0) ? 1 : 0;
	}
	if (checksum == 3) {
		return true;
	} else {
		return false;
	}
}
// c)

public static int antallNuller(int[][] mat) {
	
	int checksum = 0;
	for (int i = 0; i < mat.length; i++) {
		for (int j = 0; j < mat[0].length; j++) {
			checksum += (mat[i][j] == 0) ? 1 : 0;
		}
	}
	return checksum;
}
// Oppgave 6

public class Epost {
    // a)
    private String til;
    private String emne;
    private String innhold;
    private int dag;
    private int maaned;

    // b)
    public Epost(String tilinit, String emneinit, String innholdinit, int daginit, int maanedinit) {

        til = tilinit;
        emne = emneinit;
        innhold = innholdinit;
        dag = daginit;
        maaned = maanedinit;
    }
    // c)
    public void setTil(String til){
        this.til = til;
    }
    public void setDag(int dag){
        this.dag = dag;
    }
    public String getTil() {
        return til;
    }
    public int getDag() {
        return dag;
    }

    // d)

    public int lengde() {

        int i = innhold.length();
        return i;
    }
    // e)

    public String toString() {

        String ut = "Dato: " + dag + "." + maaned + ", Til: " + til + ", Emne: " + emne;
        return ut;
    }
    // f)

    public boolean harSammeMottaker(Epost e){
        boolean samme = (til == e.til);

        return samme;

    }
    // g)

    public int compareTo(Epost e){

        int compare = 0;
        if (maaned > e.maaned) {
            compare = 1;
        } else if (maaned < e.maaned) {
            compare = -1;
        } else if (dag > e.dag) {
            compare = 1;
        } else if (dag < e.dag) {
            compare = -1;
        }
        return compare;
    }
}
